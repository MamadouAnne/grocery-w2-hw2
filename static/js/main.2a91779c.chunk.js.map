{"version":3,"sources":["data.js","components/grocery.jsx","App.js","reportWebVitals.js","index.js"],"names":["items","item","brand","units","quantity","isPurchased","Groceries","className","scope","this","props","product","Component","App","state","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAuBeA,EAvBD,CACZ,CACEC,KAAM,cACNC,MAAO,QACPC,MAAO,SACPC,SAAU,GACVC,aAAa,GAEf,CACEJ,KAAM,cACNC,MAAO,YACPC,MAAO,MACPC,SAAU,EACVC,aAAa,GAEf,CACEJ,KAAM,QACNC,MAAO,WACPC,MAAO,MACPC,SAAU,GACVC,aAAa,ICcFC,G,4KA7BX,OACE,8BAEE,wBAAOC,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,8BAGJ,gCACE,+BACE,oBAAIA,MAAM,MAAV,eACA,6BAAKC,KAAKC,MAAMC,QAAQV,OACxB,6BAAKQ,KAAKC,MAAMC,QAAQT,QACxB,+BAAKO,KAAKC,MAAMC,QAAQR,MAAxB,OACA,+BAAKM,KAAKC,MAAMC,QAAQP,SAAxB,OACA,+BAAKK,KAAKC,MAAMC,QAAQN,YAAxB,qB,GAtBUO,cCoBTC,E,4MAlBbC,MAAQ,CACNd,S,uDAGA,OACE,8BACE,8BACGS,KAAKK,MAAMd,MAAMe,KAAI,SAACJ,GAAD,OACnBA,EAAQN,YAEL,KADF,cAAC,EAAD,CAAWM,QAASA,GAAcA,EAAQV,iB,GAVtCW,aCQHI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2a91779c.chunk.js","sourcesContent":["const items = [\n  {\n    item: \"agave sugar\",\n    brand: \"AllUp\",\n    units: \"1liter\",\n    quantity: 12,\n    isPurchased: false,\n  },\n  {\n    item: \"spelt flour\",\n    brand: \"Top light\",\n    units: \"2lb\",\n    quantity: 3,\n    isPurchased: true,\n  },\n  {\n    item: \"fonio\",\n    brand: \"The best\",\n    units: \"3lb\",\n    quantity: 10,\n    isPurchased: false,\n  },\n];\nexport default items;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\n\nclass Groceries extends Component {\n  render() {\n    return (\n      <div>\n        {/* I used bootstrap to display data in the table. */}\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">item</th>\n              <th scope=\"col\">brand</th>\n              <th scope=\"col\">units</th>\n              <th scope=\"col\">quantity</th>\n              <th scope=\"col\">isPurchased</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th scope=\"row\">1</th>\n              <td>{this.props.product.item}</td>\n              <td>{this.props.product.brand}</td>\n              <td>{this.props.product.units} </td>\n              <td>{this.props.product.quantity} </td>\n              <td>{this.props.product.isPurchased} </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Groceries;\n","import React, { Component } from \"react\";\nimport items from \"./data\";\nimport Groceries from \"./components/grocery\";\nimport \"./App.css\";\nclass App extends Component {\n  state = {\n    items,\n  };\n  render() {\n    return (\n      <div>\n        <div>\n          {this.state.items.map((product) =>\n            !product.isPurchased ? (\n              <Groceries product={product} key={product.item} />\n            ) : null\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}